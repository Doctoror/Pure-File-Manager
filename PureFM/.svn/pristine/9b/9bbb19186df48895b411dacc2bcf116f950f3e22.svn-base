package com.docd.purefm.dialogs;

import com.docd.purefm.Extras;
import com.docd.purefm.R;
import com.docd.purefm.browser.Browser;
import com.docd.purefm.file.GenericFile;
import com.docd.purefm.utils.FileUtils;

import android.app.AlertDialog;
import android.app.Dialog;
import android.app.DialogFragment;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.LocalBroadcastManager;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.widget.EditText;
import android.widget.Toast;

public final class CreateDirectoryDialog extends DialogFragment {

    public static DialogFragment instantiate(Browser browser) {
        final CreateDirectoryDialog cd = new CreateDirectoryDialog();
        cd.browser = browser;
        return cd;
    }
    
    private EditText filename;
    private Browser browser;
    
    @Override
    public Dialog onCreateDialog(Bundle savedInstanceState) {
        this.buildEditText();
        final AlertDialog.Builder b = new AlertDialog.Builder(getActivity());
        b.setTitle(R.string.dialog_new_folder_title);
        b.setView(this.filename);
        b.setPositiveButton(R.string.create, new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                if (browser == null) {
                    dialog.dismiss();
                    return;
                }
                
                if (filename.getText().length() == 0) {
                    Toast.makeText(getActivity(), R.string.name_empty, Toast.LENGTH_SHORT).show();
                    return;
                }
                final String name = filename.getText().toString();
                if (!FileUtils.isValidFileName(name)) {
                    Toast.makeText(getActivity(), R.string.invalid_filename, Toast.LENGTH_SHORT).show();
                    return;
                }
                final GenericFile target = FileUtils.newFile(browser.getPath().toFile(), name);
                if (target.exists()) {
                    Toast.makeText(getActivity(), R.string.file_exists, Toast.LENGTH_SHORT).show();
                    return;
                }
                createDirectory(target);
                dialog.dismiss();
            }
        });
        b.setNegativeButton(R.string.cancel, new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                dialog.dismiss();
            }
        });
        return b.create();
    }
    
    private void buildEditText() {
        this.filename = (EditText) LayoutInflater.from(
                getActivity()).inflate(R.layout.text_field_filename, null);
        this.filename.setHint(R.string.menu_new_folder);
    }
    
    private void createDirectory(GenericFile target) {
        if (target.mkdir()) {
            LocalBroadcastManager.getInstance(getActivity()).sendBroadcast(new Intent(Extras.BROADCAST_REFRESH));
            browser.invalidate();
        } else {
            Toast.makeText(getActivity(), R.string.could_not_create_dir, Toast.LENGTH_SHORT).show();
        }
    }
}
